{% extends "viewlayout.sqliteExplorer" %}
{% block view %}
<style>
    .table-name-box {
        display: flex;
        align-items: center;
        margin-top: 5px;
    }

    .table-name-box p {
        margin-right: 10px;
    }

    .input {
        margin-right: 10px;
        box-shadow: none;
        outline: solid 2px transparent;
        transition: 0.2s;
    }

    .input:not([type=checkbox]):focus {
        outline: solid 2px rgb(226, 226, 226);
    }


    .input-full {
        width: 100%;
    }

    .input:focus {
        box-shadow: none;
        transform: none;
    }

    .table-container {
        margin-top: 12px;
    }

    select {
        width: 100%;
    }

    .save-button {
        margin-top: 15px;
        margin-bottom: 20px;
    }
</style>
<div class="table-container">
    <form id="data-form">
    <table class="db-table">
        <thead>
            <tr>
                <th>Name</th>
            </tr>
        </thead>
        <tbody id="rows">
            <tr>
                <td><input style="width: 260px;" type="text" id="get_column_name" class="input input-full" value="{{ column_data[1] }}"></td>
            </tr>
        </tbody>
    </table>
    <button class="btn save-button" id="update-button">Rename</button>
</form>
</div>
<datalist id="defaultList">
    <option value="NULL">
</datalist>
<script>
    function _(elms) {
        return document.querySelectorAll(elms);
    }
    function _id(elm) {
        return document.getElementById(elm);
    }


    _id("update-button").addEventListener("click", (e) => {
        let formData = new FormData();
        let pre_column_name = `{{ column_data[1] }}`;
        let new_column_name = _id("get_column_name").value;
        if (pre_column_name != new_column_name) {
        let sqlQuery = `ALTER TABLE \`{{ selected_table }}\` RENAME \`${pre_column_name}\` TO \`${new_column_name}\``;
        formData.append("query", sqlQuery);
        fetch("/~sql-executer", {
            method: "POST",
            body: formData
        }).then(response => response.json()).then((data) => {
            if (data.status == "success") {
                showAlert("Column renamed successfully", "green");
                setTimeout(() => {
                    window.open("/structure?table={{ selected_table }}", "_self").focus();
                }, 5000);
            }
            else {
                showAlert("Error: Can't rename", "red");
            }
        }).catch(err=>{
            if (err) {
                showAlert("Error: Can't rename", "red");
            }
        })               
    }

    })

    _id("data-form").addEventListener("submit", (e)=> {
        e.preventDefault();
    })



</script>
{% endblock %}